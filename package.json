{
    "name": "api-guidetypescript",
    "version": "1.0.0",
    "description": "Vegan City Guide API - A comprehensive TypeScript REST API",
    "main": "dist/server.js",
    "scripts": {
        "dev": "nodemon src/server.ts",
        "start": "node dist/server.js",
        "start:dev": "ts-node src/server.ts",
        "build": "tsc",
        "build:watch": "tsc --watch",
        "clean": "rimraf dist",
        "prebuild": "npm run clean",
        "postbuild": "cp swagger.yaml dist/ && (cp -r public dist/ 2>/dev/null || true)",
        "setup:env": "node scripts/setup-env.js",
        "test": "vitest run --config vitest.config.ts",
        "test:watch": "vitest --config vitest.config.ts",
        "test:ui": "vitest --ui --config vitest.config.ts",
        "test:unit": "TEST_TYPE=unit vitest run src/test/controllers src/test/services src/test/middleware --config vitest.config.ts",
        "test:integration": "TEST_TYPE=integration vitest run src/test/integration --config vitest.config.ts",
        "test:e2e": "playwright test",
        "test:coverage": "vitest run --coverage --config vitest.config.ts",
        "test:coverage:unit": "TEST_TYPE=unit vitest run --coverage src/test/controllers src/test/services src/test/middleware --config vitest.config.ts",
        "test:coverage:integration": "TEST_TYPE=integration vitest run --coverage src/test/integration --config vitest.config.ts",
        "test:controllers": "vitest run src/test/controllers --config vitest.config.ts",
        "test:services": "vitest run src/test/services --config vitest.config.ts",
        "test:middleware": "vitest run src/test/middleware --config vitest.config.ts",
        "test:debug": "vitest run --reporter=verbose --no-coverage --config vitest.config.ts",
        "test:silent": "vitest run --reporter=basic --config vitest.config.ts",
        "test:ci": "vitest run --reporter=json --outputFile=test-results.json --coverage --config vitest.config.ts",
        "test:ci:unit": "TEST_TYPE=unit vitest run --reporter=json --outputFile=unit-test-results.json --coverage src/test/controllers src/test/services src/test/middleware --config vitest.config.ts",
        "test:ci:integration": "TEST_TYPE=integration vitest run --reporter=json --outputFile=integration-test-results.json --coverage src/test/integration --config vitest.config.ts",
        "test:clear-cache": "vitest run --no-cache --config vitest.config.ts",
        "test:update-snapshots": "vitest run --update-snapshots --config vitest.config.ts",
        "test:legacy": "echo 'Legacy tests deprecated. Use: npm run test'",
        "test:run": "vitest run",
        "test:all": "vitest run --coverage",
        "test:e2e:ui": "playwright test --ui",
        "test:e2e:headed": "playwright test --headed",
        "test:e2e:debug": "playwright test --debug",
        "playwright:install": "playwright install",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix",
        "format": "prettier --config .prettierrc --write src/**/*.ts",
        "format:check": "prettier --config .prettierrc --check src/**/*.ts",
        "type-check": "tsc --noEmit",
        "validate": "npm run type-check && npm run lint && npm run test:all",
        "sonar:scan": "sonar-scanner",
        "sonar:prepare": "npm run test:ci && npm run lint:report && npm run test:execution-report",
        "test:execution-report": "node src/scripts/generateTestReport.js",
        "lint:report": "eslint . --format json --output-file eslint-report.json ?? true",
        "docker:build": "docker build -t api-guidetypescript .",
        "docker:run": "docker run -p 5001:5001 api-guidetypescript",
        "docker:build:optimized": "docker build --target production -t api-guidetypescript:optimized .",
        "docker:scan": "docker scout cves api-guidetypescript:latest",
        "swagger:generate": "swagger-jsdoc -d swagger.-checkconfig.js -o swagger.yaml src/routes/*.ts",
        "docs:serve": "swagger-ui-serve swagger.yaml",
        "seed": "ts-node src/scripts/seedData.ts",
        "seed:prod": "node dist/scripts/seedData.js",
        "db:check": "ts-node src/scripts/checkData.ts",
        "audit:fix": "npm audit fix",
        "audit:fix:force": "npm audit fix --force",
        "deps:check": "npm outdated",
        "deps:update": "npm update",
        "deps:update:major": "npx npm-check-updates -u"
    },
    "keywords": [
        "typescript",
        "express",
        "api",
        "vegan",
        "mongodb",
        "swagger",
        "rest-api"
    ],
    "author": "Edgar Chavero <edieveg316@gmail.com> (https://www.linkedin.com/in/edgar-chavero/)",
    "license": "MIT",
    "engines": {
        "node": ">=20.0.0",
        "npm": ">=10.0.0"
    },
    "dependencies": {
        "@googlemaps/google-maps-services-js": "^3.3.42",
        "bcryptjs": "^3.0.2",
        "body-parser": "^2.2.0",
        "colors": "^1.4.0",
        "cookie-parser": "^1.4.6",
        "cors": "^2.8.5",
        "dotenv": "^16.3.1",
        "express": "^4.18.2",
        "express-async-handler": "^1.2.0",
        "express-jwt": "^8.4.1",
        "express-mongo-sanitize": "^2.2.0",
        "express-rate-limit": "^7.5.1",
        "express-validator": "^7.2.1",
        "express-xss-sanitizer": "^2.0.0",
        "helmet": "^8.1.0",
        "ioredis": "^5.6.1",
        "joi": "^17.13.3",
        "js-yaml": "^4.1.0",
        "jsonwebtoken": "^9.0.2",
        "mongodb": "^6.3.0",
        "mongoose": "^8.15.2",
        "morgan": "^1.10.0",
        "nodemailer": "^7.0.3",
        "redis": "^5.5.6",
        "swagger-ui-express": "^5.0.1",
        "winston": "^3.11.0"
    },
    "devDependencies": {
        "@faker-js/faker": "^8.4.1",
        "@playwright/mcp": "^0.0.31",
        "@playwright/test": "^1.54.1",
        "@types/bcryptjs": "^2.4.6",
        "@types/cookie-parser": "^1.4.6",
        "@types/cors": "^2.8.17",
        "@types/express": "^4.17.21",
        "@types/express-mongo-sanitize": "^1.3.2",
        "@types/express-rate-limit": "^5.1.3",
        "@types/helmet": "^0.0.48",
        "@types/ioredis": "^4.28.10",
        "@types/jest": "^29.5.12",
        "@types/joi": "^17.2.2",
        "@types/js-yaml": "^4.0.9",
        "@types/jsonwebtoken": "^9.0.10",
        "@types/mongoose": "^5.11.97",
        "@types/morgan": "^1.9.9",
        "@types/node": "^20.10.2",
        "@types/nodemailer": "^6.4.17",
        "@types/supertest": "^6.0.3",
        "@types/swagger-ui-express": "^4.1.8",
        "@typescript-eslint/eslint-plugin": "^8.34.0",
        "@typescript-eslint/parser": "^8.34.0",
        "@vitest/coverage-v8": "^3.2.4",
        "@vitest/ui": "^3.2.4",
        "c8": "^10.1.3",
        "colors.ts": "^1.0.20",
        "concurrently": "^9.1.2",
        "cross-env": "^7.0.3",
        "eslint": "^9.29.0",
        "eslint-config-prettier": "^10.1.5",
        "eslint-plugin-prettier": "^5.4.1",
        "faker": "^5.5.3",
        "jest": "^30.0.0",
        "mocha": "^11.6.0",
        "mongodb-memory-server": "^10.1.4",
        "nodemon": "^3.1.0",
        "openapi-types": "^12.1.3",
        "postman-to-openapi": "^3.0.1",
        "prettier": "^3.5.3",
        "rimraf": "^6.0.1",
        "sonar-scanner": "^3.1.0",
        "supertest": "^7.1.1",
        "ts-jest": "^29.4.0",
        "ts-node": "^10.9.1",
        "typescript": "^5.8.3",
        "vitest": "^3.2.4"
    },
    "overrides": {
        "test-exclude": "^7.0.1",
        "brace-expansion": "^2.0.2"
    }
}
