# =============================================================================
# DOCKER COMPOSE ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env.docker and update the values for your environment
# This file is used by docker-compose.yml

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Configuration
MONGO_ROOT_USERNAME=admin
# IMPORTANT: Change this password and use a strong password in production!
MONGO_ROOT_PASSWORD=your_secure_mongo_password_here
MONGO_DATABASE=vegan-city-guide

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Configuration
# IMPORTANT: Change this password and use a strong password in production!
REDIS_PASSWORD=your_secure_redis_password_here

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=production
PORT=5001

# JWT Secrets
# IMPORTANT: Generate secure random strings for production!
# You can use: openssl rand -hex 32
JWT_SECRET=your_super_secure_jwt_secret_key_minimum_32_characters
JWT_REFRESH_SECRET=your_super_secure_jwt_refresh_secret_key_minimum_32_characters

# Development JWT Secrets (different from production)
JWT_SECRET_DEV=your_dev_jwt_secret_key_minimum_32_characters
JWT_REFRESH_SECRET_DEV=your_dev_jwt_refresh_secret_key_minimum_32_characters

# JWT Expiration
JWT_EXPIRE=30d
JWT_REFRESH_EXPIRE=7d

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 
# üö® CRITICAL SECURITY REMINDERS:
#
# 1. NEVER commit this file with real passwords to version control
# 2. Generate strong, unique passwords for each environment
# 3. Use different credentials for development and production
# 4. Rotate passwords regularly
# 5. Use environment-specific credential management in production
#
# üîê GENERATING SECURE PASSWORDS:
#
# For MongoDB and Redis passwords:
# openssl rand -base64 32
#
# For JWT secrets:
# openssl rand -hex 64
#
# üìù PRODUCTION DEPLOYMENT:
#
# In production, consider using:
# - Google Secret Manager (GCP)
# - AWS Secrets Manager (AWS)  
# - Azure Key Vault (Azure)
# - HashiCorp Vault
# - Kubernetes Secrets
#
# =============================================================================