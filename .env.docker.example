# =============================================================================
# DOCKER COMPOSE ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env.docker and update the values for your environment
# This file is used by docker-compose.yml

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Configuration
# CRITICAL: Generate a secure password using: openssl rand -base64 32
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=REPLACE_WITH_SECURE_PASSWORD_FROM_OPENSSL
MONGO_DATABASE=vegan-city-guide

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Configuration
# CRITICAL: Generate a secure password using: openssl rand -base64 32
REDIS_PASSWORD=REPLACE_WITH_SECURE_PASSWORD_FROM_OPENSSL

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=production
PORT=5001

# JWT Secrets
# CRITICAL: Generate secure random strings using: openssl rand -hex 64
JWT_SECRET=REPLACE_WITH_64_CHARACTER_HEX_STRING_FROM_OPENSSL
JWT_REFRESH_SECRET=REPLACE_WITH_64_CHARACTER_HEX_STRING_FROM_OPENSSL

# Development JWT Secrets (MUST be different from production)
# CRITICAL: Generate different secrets for dev using: openssl rand -hex 64
JWT_SECRET_DEV=REPLACE_WITH_DIFFERENT_64_CHARACTER_HEX_STRING
JWT_REFRESH_SECRET_DEV=REPLACE_WITH_DIFFERENT_64_CHARACTER_HEX_STRING

# JWT Expiration
JWT_EXPIRE=30d
JWT_REFRESH_EXPIRE=7d

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 
# üö® CRITICAL SECURITY REMINDERS:
#
# 1. NEVER commit this file with real passwords to version control
# 2. Generate strong, unique passwords for each environment
# 3. Use different credentials for development and production
# 4. Rotate passwords regularly
# 5. Use environment-specific credential management in production
#
# üîê GENERATING SECURE PASSWORDS:
#
# For MongoDB and Redis passwords:
# openssl rand -base64 32
#
# For JWT secrets:
# openssl rand -hex 64
#
# üìù PRODUCTION DEPLOYMENT:
#
# In production, consider using:
# - Google Secret Manager (GCP)
# - AWS Secrets Manager (AWS)  
# - Azure Key Vault (Azure)
# - HashiCorp Vault
# - Kubernetes Secrets
#
# =============================================================================